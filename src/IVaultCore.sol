pragma solidity ^0.8.13;

interface IVaultCore {
    event AllocateThresholdUpdated(uint256 _threshold);
    event AssetAllocated(address _asset, address _strategy, uint256 _amount);
    event AssetDefaultStrategyUpdated(address _asset, address _strategy);
    event AssetSupported(address _asset);
    event CapitalPaused();
    event CapitalUnpaused();
    event GovernorshipTransferred(address indexed previousGovernor, address indexed newGovernor);
    event MaxSupplyDiffChanged(uint256 maxSupplyDiff);
    event Mint(address _addr, uint256 _value);
    event NetOusdMintForStrategyThresholdChanged(uint256 _threshold);
    event OusdMetaStrategyUpdated(address _ousdMetaStrategy);
    event PendingGovernorshipTransfer(address indexed previousGovernor, address indexed newGovernor);
    event PriceProviderUpdated(address _priceProvider);
    event RebasePaused();
    event RebaseThresholdUpdated(uint256 _threshold);
    event RebaseUnpaused();
    event Redeem(address _addr, uint256 _value);
    event RedeemFeeUpdated(uint256 _redeemFeeBps);
    event StrategistUpdated(address _address);
    event StrategyApproved(address _addr);
    event StrategyRemoved(address _addr);
    event TrusteeAddressChanged(address _address);
    event TrusteeFeeBpsChanged(uint256 _basis);
    event VaultBufferUpdated(uint256 _vaultBuffer);
    event YieldDistribution(address _to, uint256 _yield, uint256 _fee);

    function allocate() external;
    function assetDefaultStrategies(address) external view returns (address);
    function autoAllocateThreshold() external view returns (uint256);
    function burnForStrategy(uint256 _amount) external;
    function calculateRedeemOutputs(uint256 _amount) external view returns (uint256[] memory);
    function capitalPaused() external view returns (bool);
    function checkBalance(address _asset) external view returns (uint256);
    function claimGovernance() external;
    function getAllAssets() external view returns (address[] memory);
    function getAllStrategies() external view returns (address[] memory);
    function getAssetCount() external view returns (uint256);
    function getStrategyCount() external view returns (uint256);
    function governor() external view returns (address);
    function isGovernor() external view returns (bool);
    function isSupportedAsset(address _asset) external view returns (bool);
    function maxSupplyDiff() external view returns (uint256);
    function mint(address _asset, uint256 _amount, uint256 _minimumOusdAmount) external;
    function mintForStrategy(uint256 _amount) external;
    function netOusdMintForStrategyThreshold() external view returns (uint256);
    function netOusdMintedForStrategy() external view returns (int256);
    function ousdMetaStrategy() external view returns (address);
    function priceProvider() external view returns (address);
    function rebase() external;
    function rebasePaused() external view returns (bool);
    function rebaseThreshold() external view returns (uint256);
    function redeem(uint256 _amount, uint256 _minimumUnitAmount) external;
    function redeemAll(uint256 _minimumUnitAmount) external;
    function redeemFeeBps() external view returns (uint256);
    function setAdminImpl(address newImpl) external;
    function strategistAddr() external view returns (address);
    function totalValue() external view returns (uint256 value);
    function transferGovernance(address _newGovernor) external;
    function trusteeAddress() external view returns (address);
    function trusteeFeeBps() external view returns (uint256);
    function vaultBuffer() external view returns (uint256);
}
